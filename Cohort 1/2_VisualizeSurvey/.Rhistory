# make a table 1
#   https://cran.r-project.org/web/packages/tableone/vignettes/introduction.html
library(tableone)
library(readr)
# need to label variables
library(Hmisc)
# scoring the physical and diet survey
library(scales)
#load dataset
setwd("/Volumes/GoogleDrive/My Drive/20180823 YouHeal/Data/!Clean Datasets")
load("Phase1_Scored.RData")
## wrangle data into long format
# create dataset containing only the YRBS items
YRBS_wide <- YH_phase1_score %>%
select(ID, contains("YRBS"))
# get a vector of column names, dropping base/flup prefix
yrbsVars <- YRBS_wide %>%
select(ID, starts_with("base")) %>%
colnames() %>%
str_remove("base_")
# reassign variable names
# baseline
YRBS_wide_base <- YRBS_wide %>%
select(ID, starts_with(("base")))
colnames(YRBS_wide_base) <- yrbsVars
# make a new variable for time of measurement, at baseline
YRBS_wide_base$time <- 0
# follow-up
YRBS_wide_flup <- YRBS_wide %>%
select(ID, starts_with(("flup")))
colnames(YRBS_wide_flup) <- yrbsVars
# make a new variable for time of measurement, at follow-up
YRBS_wide_flup$time <- 1
# now that variables have common names for different time points,
# merge baseline and follow-up data
YRBS_long <- bind_rows(YRBS_wide_base, YRBS_wide_flup)
# make time variable a factor
YRBS_long$time <- YRBS_long$time %>%
factor(
levels = c(0, 1),
labels = c("Baseline", "Follow-up"),
ordered = TRUE
)
#reorder variables
YRBS_long <- YRBS_long %>%
select(ID, time, everything())
## Rescore Diet and Physical Activity Survey (items Q7 to Q25)
##   so higher score is associated with better health
##   and lower score is associated with worse health
glimpse(YRBS_long)
# make factor variables numeric
YRBS_long_factor <- YRBS_long %>%
# convert all scoring variables to numeric
mutate_at(
vars(-ID, -time),
funs(as.numeric)
)
# YRBS variables already in correct order: healthy higher score
yrbsVars2 <- YRBS_long_factor %>%
select(ID, time,
Q18_YRBS_allergy)
yrbsVars4 <- YRBS_long_factor %>%
select(ID, time,
Q24_YRBS_sportsteam)
yrbsVars6 <- YRBS_long_factor %>%
select(ID, time,
Q23_YRBS_pe)
yrbsVars7 <- YRBS_long_factor %>%
select(ID, time,
Q8_YRBS_fruit, Q9_YRBS_salad, Q10_YRBS_potato, Q11_YRBS_carrot,
Q12_YRBS_otherveg, Q15_YRBS_water, Q16_YRBS_milk)
yrbsVars8 <- YRBS_long_factor %>%
select(ID, time,
Q17_YRBS_breakfast, Q19_YRBS_physical, Q20_YRBS_strength)
# YRBS variables to be reversed so healthier will be higher score
yrbsVars5R <- YRBS_long_factor %>%
select(ID, time,
Q25_YRBS_concussion)
yrbsVars7R <- YRBS_long_factor %>%
select(ID, time,
Q7_YRBS_juice, Q13_YRBS_soda, Q14_YRBS_sportdrink,
Q21_YRBS_tv, Q22_YRBS_screentime)
# rescore variables to 0-100 point scale based off all possible factor levels
# rescale items with 4 possible answers
yrbsVars2[,3] <- yrbsVars2[,3] %>%
sapply(FUN = function(x) {
x[x == 1] <- 0
x[x == 2] <- 100
x[x == 3] <- NaN
x
})
# rescale items with 4 possible answers
yrbsVars4[,3] <- yrbsVars4[,3] %>%
sapply(FUN = function(x) {
x[x == 1] <- 0
x[x == 2] <- 1 * 100/3
x[x == 3] <- 2 * 100/3
x[x == 4] <- 100
x
})
# rescale items with 6 possible answers
yrbsVars6[,3] <- yrbsVars6[,3] %>%
sapply(FUN = function(x) {
x[x == 1] <- 0
x[x == 2] <- 20
x[x == 3] <- 40
x[x == 4] <- 60
x[x == 5] <- 80
x[x == 6] <- 100
x
})
# rescale items with 7 possible answers
yrbsVars7[,3:9] <- yrbsVars7[,3:9] %>%
sapply(FUN = function(x) {
x[x == 1] <- 0
x[x == 2] <- 1 * 100/6
x[x == 3] <- 2 * 100/6
x[x == 4] <- 3 * 100/6
x[x == 5] <- 4 * 100/6
x[x == 6] <- 5 * 100/6
x[x == 7] <- 100
x
})
# rescale items with 8 possible answers
yrbsVars8[,3:5] <- yrbsVars8[,3:5] %>%
sapply(FUN = function(x) {
x[x == 1] <- 0
x[x == 2] <- 1 * 100/7
x[x == 3] <- 2 * 100/7
x[x == 4] <- 3 * 100/7
x[x == 5] <- 4 * 100/7
x[x == 6] <- 5 * 100/7
x[x == 7] <- 6 * 100/7
x[x == 8] <- 100
x
})
# rescale items with 5 possible answers, reversed
yrbsVars5R[,3] <- yrbsVars5R[,3] %>%
sapply(FUN = function(x) {
x[x == 1] <- 100
x[x == 2] <- 75
x[x == 3] <- 50
x[x == 4] <- 25
x[x == 5] <- 0
x
})
# rescale items with 7 possible answers, reversed
yrbsVars7R[,3:7] <- yrbsVars7R[,3:7] %>%
sapply(FUN = function(x) {
x[x == 1] <- 100
x[x == 2] <- 5 * 100/6
x[x == 3] <- 4 * 100/6
x[x == 4] <- 3 * 100/6
x[x == 5] <- 2 * 100/6
x[x == 6] <- 1 * 100/6
x[x == 7] <- 0
x
})
# rejoin all the scaled items together
YRBS_long_100 <- yrbsVars2 %>%
inner_join(yrbsVars4, by = c("ID", "time")) %>%
inner_join(yrbsVars6, by = c("ID", "time")) %>%
inner_join(yrbsVars7, by = c("ID", "time")) %>%
inner_join(yrbsVars8,   by = c("ID", "time")) %>%
inner_join(yrbsVars5R,  by = c("ID", "time")) %>%
inner_join(yrbsVars7R,   by = c("ID", "time"))
# reorder variables so in proper order
YRBS_long_100 <- YRBS_long_100 %>% select(ID, time, yrbsVars)
# make into tibble
YRBS_long_100 <- as.tibble(YRBS_long_100)
## calculate composite scores: overall, diet, physical activity
# identify variables in each composite
# overall composite
yrbsVarsAll <- YRBS_long %>%
select(starts_with("Q"), -Q18_YRBS_allergy, -Q23_YRBS_pe, -Q24_YRBS_sportsteam, -Q25_YRBS_concussion) %>%
colnames()
# diet composite
yrbsVarsDiet <- c("Q7_YRBS_juice", "Q8_YRBS_fruit", "Q9_YRBS_salad", "Q10_YRBS_potato",
"Q11_YRBS_carrot", "Q12_YRBS_otherveg", "Q13_YRBS_soda", "Q14_YRBS_sportdrink",
"Q15_YRBS_water", "Q16_YRBS_milk", "Q17_YRBS_breakfast")
# physical activity composite
yrbsVarsPhys <- c("Q19_YRBS_physical", "Q20_YRBS_strength", "Q21_YRBS_tv", "Q22_YRBS_screentime")
# calculate composties
# overall composite
YRBS_compAll <- YRBS_long_100 %>%
select(yrbsVarsAll) %>%
mutate(
compAll = apply(., 1, function(row){ mean(row, na.rm = TRUE) })
) %>%
select(compAll)
# diet composite
YRBS_compDiet <- YRBS_long_100 %>%
select(yrbsVarsDiet) %>%
mutate(
compDiet = apply(., 1, function(row){ mean(row, na.rm = TRUE) })
) %>%
select(compDiet)
# physical activity composite
YRBS_compPhys <- YRBS_long_100 %>%
select(yrbsVarsPhys) %>%
mutate(
compPhys = apply(., 1, function(row){ mean(row, na.rm = TRUE) })
) %>%
select(compPhys)
# combine all composites into single data frame
YRBS_compScores <- YRBS_long_100 %>%
select(ID, time) %>%
cbind(YRBS_compAll, YRBS_compDiet, YRBS_compPhys)
# PI wants to remove the following survey questions: 18. Allergies, 23. PE, 24. Sport teams, 25. Concussions
# but only makes sense to remove allergy
#locate composite variables in dataset
#YH_phase1_score[,1]
#YH_phase1_score[,110:119]
#subset by time into working data frames
composite_base <- cbind(YH_phase1_score[,1],YH_phase1_score[,110],YH_phase1_score[,112:115],YH_phase1_score$base_TSF_avg,YH_phase1_score$base_WC_avg)
composite_flup <- cbind(YH_phase1_score[,1],YH_phase1_score[,111],YH_phase1_score[,116:119],YH_phase1_score$flup_TSF_avg,YH_phase1_score$flup_WC_avg)
#create new variable names, not associated with time, assign
composite_vars <- c("ID","Q26Q35_se_composite","Q36Q47_em_composite","Q41Q43_em_individual","Q36Q40_em_organizational","Q42Q47_em_community","Avg_TSF","Avg_WC")
colnames(composite_base) <- composite_vars
colnames(composite_flup) <- composite_vars
#create a dummy variable for time
composite_base$time <- 0
composite_flup$time <- 1
composite <- rbind(composite_base, composite_flup)
#make body measurements doubles
composite$Avg_TSF <- as.double(composite$Avg_TSF)
composite$Avg_WC <- as.double(composite$Avg_WC)
# combine with YRBS diet and physical activity composites
# make all id and time variables to be the same numerics (from factors)
composite$ID <- as.integer(composite$ID)
composite$time <- as.factor(composite$time)
YRBS_compScores$time <- as.factor(YRBS_compScores$time)
composite$time <- as.numeric(composite$time)
YRBS_compScores$time <- as.numeric(YRBS_compScores$time)
# check to make sure matched up correctly
cbind(composite$ID,YRBS_compScores$ID,composite$time,YRBS_compScores$time)
# final dataset with all composite scores to be considered
composite_all <- composite %>%
inner_join(YRBS_compScores, by = c("ID","time")) %>%
select(ID, time, everything()) %>%
mutate(
# format time variable as factor with labels
time = factor(time, levels = c(1,2), labels = c("Baseline", "Follow-up"))
)
setwd("/Volumes/GoogleDrive/My Drive/20180823 YouHeal/Figures & Tables/Composite Boxplots")
summary(composite_all)
boxit <- function(score, titles, color){
boxedup <- ggplot(composite_all, aes(x = as.factor(time), y = score)) + geom_boxplot(fill = color, alpha = 0.2) +
ggtitle(titles) +
xlab("Time") +
ylab("Score") +
theme(
#Change size of axes labels
text = element_text(size = 14),
axis.text.x = element_text(size = 10),
#clean up the gridlines and background
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
#saveplot
ggsave(paste(titles,".png",sep = ""), width = 5, height = 3 , boxedup)
}
#self efficacy
boxit(score = composite_all$Q26Q35_se_composite, titles = "Self Efficacy Composite", color = "gray")
#empowerment
boxit(score = composite_all$Q36Q47_em_composite, titles = "Empowerment Composite",color = "blue")
boxit(score = composite_all$Q41Q43_em_individual, titles = "Empowerment Individual Items", color = "blue")
boxit(score = composite_all$Q36Q40_em_organizational, titles = "Empowerment Organizational Items", color = "blue")
boxit(score = composite_all$Q42Q47_em_community, titles = "Empowerment Community Items", color = "blue")
#anthropometric measures
boxit(score = composite_all$Avg_TSF, titles = "Average Tricep Skin Fold (mm)", color = "green")
boxit(score = composite_all$Avg_WC, titles = "Average Waist Circumference (cm)", color = "green")
boxit100 <- function(score, titles, color){
boxedup <- ggplot(composite_all, aes(x = as.factor(time), y = score)) + geom_boxplot(fill = color, alpha = 0.2) +
scale_y_continuous(limits = c(40,80)) +
ggtitle(titles) +
xlab("Time") +
ylab("Score") +
theme(
#Change size of axes labels
text = element_text(size = 14),
axis.text.x = element_text(size = 10),
#clean up the gridlines and background
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
#saveplot
ggsave(paste(titles,".png",sep = ""), width = 5, height = 3 , boxedup)
}
# YRBS diet and physical activity scores
boxit100(score = composite_all$compAll, titles = "YRBS Combined Diet & Activity Composite", color = "red")
boxit100(score = composite_all$compDiet, titles = "YRBS Diet Composite", color = "red")
boxit100(score = composite_all$compPhys, titles = "YRBS Physical Activity Composite", color = "red")
#assign vector of variable names to be in table 1
myVars <- c(
"compDiet",
"compPhys",
"compAll",
"Q26Q35_se_composite",
"Q36Q47_em_composite",
"Q41Q43_em_individual",
"Q36Q40_em_organizational",
"Q42Q47_em_community",
"Avg_TSF",
"Avg_WC"
)
#make table 1
tab1 <- CreateTableOne(vars = myVars, strata = "time" , data = composite_all)
tab1
#save it as excel file
setwd("/Volumes/GoogleDrive/My Drive/20180823 YouHeal/Figures & Tables/Composite Boxplots")
#Initialize libraries to be used
library(tidyverse)
#tidyverse causes LaTeX error when outputting to PDF...change to "xelatex" from PDF options. Or use      HTML
library(haven)
library(psych)
library(ggplot2)
library(dplyr)
library(readr)
library(stringr)
#need to label variables
library(Hmisc)
#load dataset
setwd("/Volumes/GoogleDrive/My Drive/20180823 YouHeal/Data/!Clean Datasets")
load("Phase1.RData")
#Initialize libraries to be used
library(tidyverse)
#tidyverse causes LaTeX error when outputting to PDF...change to "xelatex" from PDF options. Or use      HTML
library(haven)
library(psych)
library(ggplot2)
library(dplyr)
library(readr)
library(stringr)
#need to label variables
library(Hmisc)
#load dataset
setwd("/Volumes/GoogleDrive/My Drive/20180823 YouHeal/Data/!Clean Datasets")
load("Phase1_raw.RData")
#function to make barcharts
baritem <- function(itembase, titlelab, questionlab) {
#wrap the data labels so they do not distort plot size
var1 <- str_wrap(itembase, width = 20)
hist_plot <- ggplot(YH_phase1, aes(var1)) +
#make a barchart
geom_bar(position = position_dodge(preserve = 'single')) +
#label
ggtitle(titlelab) +
xlab(questionlab) +
ylab("") +
#add counts as data labels and position appropriately
geom_text(stat = "count", aes(label = ..count..), size = 3, hjust = -.4) +
#Invert axes
coord_flip() +
theme(
#Change size of axes labels
text = element_text(size = 16),
#Modify x axis category labels
axis.text.y = element_text(
#change font size
size = 9
),
axis.text.x = element_text(
size = 10
),
#clean up the gridlines and background
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
#saveplot
ggsave(paste(titlelab,".png",sep = ""), width = 6, height = 4 , hist_plot)
#print bar plot
return(hist_plot)
}
#set folder to ouput barchart .png files
setwd("/Volumes/GoogleDrive/My Drive/20180823 YouHeal/Figures & Tables/YRBS Barcharts - Phase 1")
#Q7
baritem(itembase = YH_phase1$base_Q7_YRBS_juice, titlelab = "Q7 - Baseline", questionlab = "Fruit Juice")
baritem(itembase = YH_phase1$flup_Q7_YRBS_juice, titlelab = "Q7 - Follow Up", questionlab = "Fruit Juice")
#Q8
baritem(itembase = YH_phase1$base_Q8_YRBS_fruit, titlelab = "Q8 - Baseline", questionlab = "Fruit")
baritem(itembase = YH_phase1$flup_Q8_YRBS_fruit, titlelab = "Q8 - Follow Up", questionlab = "Fruit")
#Q9
baritem(itembase = YH_phase1$base_Q9_YRBS_salad, titlelab = "Q9 - Baseline", questionlab = "Salad")
baritem(itembase = YH_phase1$flup_Q9_YRBS_salad, titlelab = "Q9 - Follow Up", questionlab = "Salad")
#Q10
baritem(itembase = YH_phase1$base_Q10_YRBS_potato, titlelab = "Q10 - Baseline", questionlab = "Potatoe")
baritem(itembase = YH_phase1$flup_Q10_YRBS_potato, titlelab = "Q10 - Follow Up", questionlab = "Potatoe")
#Q11
baritem(itembase = YH_phase1$base_Q11_YRBS_carrot, titlelab = "Q11 - Baseline", questionlab = "Carrot")
baritem(itembase = YH_phase1$flup_Q11_YRBS_carrot, titlelab = "Q11 - Follow Up", questionlab = "Carrot")
#Q12
baritem(itembase = YH_phase1$base_Q12_YRBS_otherveg, titlelab = "Q12 - Baseline", questionlab = "Other Vegetable")
baritem(itembase = YH_phase1$flup_Q12_YRBS_otherveg, titlelab = "Q12 - Follow Up", questionlab = "Other Vegetable")
#Q13
baritem(itembase = YH_phase1$base_Q13_YRBS_soda, titlelab = "Q13 - Baseline", questionlab = "Soda")
baritem(itembase = YH_phase1$flup_Q13_YRBS_soda, titlelab = "Q13 - Follow Up", questionlab = "Soda")
#Q14
baritem(itembase = YH_phase1$base_Q14_YRBS_sportdrink, titlelab = "Q14 - Baseline", questionlab = "Sport Drink")
baritem(itembase = YH_phase1$flup_Q14_YRBS_sportdrink, titlelab = "Q14 - Follow Up", questionlab = "Sport Drink")
#Q15
baritem(itembase = YH_phase1$base_Q15_YRBS_water, titlelab = "Q15 - Baseline", questionlab = "Water")
baritem(itembase = YH_phase1$flup_Q15_YRBS_water, titlelab = "Q15 - Follow Up", questionlab = "Water")
#Q16
baritem(itembase = YH_phase1$base_Q16_YRBS_milk, titlelab = "Q16 - Baseline", questionlab = "Milk")
baritem(itembase = YH_phase1$flup_Q16_YRBS_milk, titlelab = "Q16 - Follow Up", questionlab = "Milk")
#Q17
baritem(itembase = YH_phase1$base_Q17_YRBS_breakfast, titlelab = "Q17 - Baseline", questionlab = "Breakfast")
baritem(itembase = YH_phase1$flup_Q17_YRBS_breakfast, titlelab = "Q17 - Follow Up", questionlab = "Breakfast")
#Q18
baritem(itembase = YH_phase1$base_Q18_YRBS_allergy, titlelab = "Q18 - Baseline", questionlab = "Allergy")
baritem(itembase = YH_phase1$flup_Q18_YRBS_allergy, titlelab = "Q18 - Follow Up", questionlab = "Allergy")
#Q19
baritem(itembase = YH_phase1$base_Q19_YRBS_physical, titlelab = "Q19 - Baseline", questionlab = "Physical")
baritem(itembase = YH_phase1$flup_Q19_YRBS_physical, titlelab = "Q19 - Follow Up", questionlab = "Physical")
#Q20
baritem(itembase = YH_phase1$base_Q20_YRBS_strength, titlelab = "Q20 - Baseline", questionlab = "Strength")
baritem(itembase = YH_phase1$flup_Q20_YRBS_strength, titlelab = "Q20 - Follow Up", questionlab = "Strength")
#Q21
baritem(itembase = YH_phase1$base_Q21_YRBS_tv, titlelab = "Q21 - Baseline", questionlab = "Television")
baritem(itembase = YH_phase1$flup_Q21_YRBS_tv, titlelab = "Q21 - Follow Up", questionlab = "Television")
#Q22
baritem(itembase = YH_phase1$base_Q22_YRBS_screentime, titlelab = "Q22 - Baseline", questionlab = "Screen Time")
baritem(itembase = YH_phase1$flup_Q22_YRBS_screentime, titlelab = "Q22 - Follow Up", questionlab = "Screen Time")
#Q23
baritem(itembase = YH_phase1$base_Q23_YRBS_pe, titlelab = "Q23 - Baseline", questionlab = "Physical Education")
baritem(itembase = YH_phase1$flup_Q23_YRBS_pe, titlelab = "Q23 - Follow Up", questionlab = "Physical Education")
#Q24
baritem(itembase = YH_phase1$base_Q24_YRBS_sportsteam, titlelab = "Q24 - Baseline", questionlab = "Sports Team")
baritem(itembase = YH_phase1$flup_Q24_YRBS_sportsteam, titlelab = "Q24 - Follow Up", questionlab = "Sports Team")
#Q25
baritem(itembase = YH_phase1$base_Q25_YRBS_concussion, titlelab = "Q25 - Baseline", questionlab = "Concussion")
baritem(itembase = YH_phase1$flup_Q25_YRBS_concussion, titlelab = "Q25 - Follow Up", questionlab = "Concussion")
#set folder to ouput barchart .png files
setwd("/Volumes/GoogleDrive/My Drive/20180823 YouHeal/Figures & Tables/Self Efficacy - Phase 1")
#Q26
baritem(itembase = YH_phase1$base_Q26_efficacy, titlelab = "Q26 - Baseline", questionlab = "Efficacy")
baritem(itembase = YH_phase1$flup_Q26_efficacy, titlelab = "Q26 - Follow Up", questionlab = "Efficacy")
#Q27
baritem(itembase = YH_phase1$base_Q27_efficacy, titlelab = "Q27 - Baseline", questionlab = "Efficacy")
baritem(itembase = YH_phase1$flup_Q27_efficacy, titlelab = "Q27 - Follow Up", questionlab = "Efficacy")
#Q28
baritem(itembase = YH_phase1$base_Q28_efficacy, titlelab = "Q28 - Baseline", questionlab = "Efficacy")
baritem(itembase = YH_phase1$flup_Q28_efficacy, titlelab = "Q28 - Follow Up", questionlab = "Efficacy")
#Q29
baritem(itembase = YH_phase1$base_Q29_efficacy, titlelab = "Q29 - Baseline", questionlab = "Efficacy")
baritem(itembase = YH_phase1$flup_Q29_efficacy, titlelab = "Q29 - Follow Up", questionlab = "Efficacy")
#Q30
baritem(itembase = YH_phase1$base_Q30_efficacy, titlelab = "Q30 - Baseline", questionlab = "Efficacy")
baritem(itembase = YH_phase1$flup_Q30_efficacy, titlelab = "Q30 - Follow Up", questionlab = "Efficacy")
#Q31
baritem(itembase = YH_phase1$base_Q31_efficacy, titlelab = "Q31 - Baseline", questionlab = "Efficacy")
baritem(itembase = YH_phase1$flup_Q31_efficacy, titlelab = "Q31 - Follow Up", questionlab = "Efficacy")
#Q32
baritem(itembase = YH_phase1$base_Q32_efficacy, titlelab = "Q32 - Baseline", questionlab = "Efficacy")
baritem(itembase = YH_phase1$flup_Q32_efficacy, titlelab = "Q32 - Follow Up", questionlab = "Efficacy")
#Q33
baritem(itembase = YH_phase1$base_Q33_efficacy, titlelab = "Q33 - Baseline", questionlab = "Efficacy")
baritem(itembase = YH_phase1$flup_Q33_efficacy, titlelab = "Q33 - Follow Up", questionlab = "Efficacy")
#Q34
baritem(itembase = YH_phase1$base_Q34_efficacy, titlelab = "Q34 - Baseline", questionlab = "Efficacy")
baritem(itembase = YH_phase1$flup_Q34_efficacy, titlelab = "Q34 - Follow Up", questionlab = "Efficacy")
#Q35
baritem(itembase = YH_phase1$base_Q35_efficacy, titlelab = "Q35 - Baseline", questionlab = "Efficacy")
baritem(itembase = YH_phase1$flup_Q35_efficacy, titlelab = "Q35 - Follow Up", questionlab = "Efficacy")
#set folder to ouput barchart .png files
setwd("/Volumes/GoogleDrive/My Drive/20180823 YouHeal/Figures & Tables/Empowerment - Phase 1")
#Q36
baritem(itembase = YH_phase1$base_Q36_empower, titlelab = "Q36 - Baseline", questionlab = "Empowerment")
baritem(itembase = YH_phase1$flup_Q36_empower, titlelab = "Q36 - Follow Up", questionlab = "Empowerment")
#Q37
baritem(itembase = YH_phase1$base_Q37_empower, titlelab = "Q37 - Baseline", questionlab = "Empowerment")
load("/Volumes/GoogleDrive/My Drive/20180823 YouHeal/Data/!Clean Datasets/Phase1_Scored.RData")
baritem(itembase = YH_phase1$flup_Q37_empower, titlelab = "Q37 - Follow Up", questionlab = "Empowerment")
#Q38
baritem(itembase = YH_phase1$base_Q38_empower, titlelab = "Q38 - Baseline", questionlab = "Empowerment")
baritem(itembase = YH_phase1$flup_Q38_empower, titlelab = "Q38 - Follow Up", questionlab = "Empowerment")
#Q39
baritem(itembase = YH_phase1$base_Q39_empower, titlelab = "Q39 - Baseline", questionlab = "Empowerment")
baritem(itembase = YH_phase1$flup_Q39_empower, titlelab = "Q39 - Follow Up", questionlab = "Empowerment")
View(YH_phase1_score)
#Q40
baritem(itembase = YH_phase1$base_Q40_empower, titlelab = "Q40 - Baseline", questionlab = "Empowerment")
baritem(itembase = YH_phase1$flup_Q40_empower, titlelab = "Q40 - Follow Up", questionlab = "Empowerment")
#Q41
baritem(itembase = YH_phase1$base_Q41_empower, titlelab = "Q41 - Baseline", questionlab = "Empowerment")
baritem(itembase = YH_phase1$flup_Q41_empower, titlelab = "Q41 - Follow Up", questionlab = "Empowerment")
#Q42
baritem(itembase = YH_phase1$base_Q42_empower, titlelab = "Q42 - Baseline", questionlab = "Empowerment")
baritem(itembase = YH_phase1$flup_Q42_empower, titlelab = "Q42 - Follow Up", questionlab = "Empowerment")
#Q43
baritem(itembase = YH_phase1$base_Q43_empower, titlelab = "Q43 - Baseline", questionlab = "Empowerment")
baritem(itembase = YH_phase1$flup_Q43_empower, titlelab = "Q43 - Follow Up", questionlab = "Empowerment")
#Q44
baritem(itembase = YH_phase1$base_Q44_empower, titlelab = "Q44 - Baseline", questionlab = "Empowerment")
baritem(itembase = YH_phase1$flup_Q44_empower, titlelab = "Q44 - Follow Up", questionlab = "Empowerment")
#Q45
baritem(itembase = YH_phase1$base_Q45_empower, titlelab = "Q45 - Baseline", questionlab = "Empowerment")
baritem(itembase = YH_phase1$flup_Q45_empower, titlelab = "Q45 - Follow Up", questionlab = "Empowerment")
#Q46
baritem(itembase = YH_phase1$base_Q46_empower, titlelab = "Q46 - Baseline", questionlab = "Empowerment")
baritem(itembase = YH_phase1$flup_Q46_empower, titlelab = "Q46 - Follow Up", questionlab = "Empowerment")
#Q47
baritem(itembase = YH_phase1$base_Q47_empower, titlelab = "Q47 - Baseline", questionlab = "Empowerment")
baritem(itembase = YH_phase1$flup_Q47_empower, titlelab = "Q47 - Follow Up", questionlab = "Empowerment")
View(YH_phase1)
