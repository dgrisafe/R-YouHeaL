"1 to 3 times during the past 7 days",
"4 to 6 times during the past 7 days",
"1 time per day",
"2 times per day",
"3 times per day",
"4 or more times per day"
),
Q13_old = c("I did not drink soda or pop during the past 7 days",
"1 to 3 times during the past 7 days",
"4 to 6 times during the past 7 days",
"1 time per day",
"2 times per day",
"3 times per day",
"4 or more times per day"
),
Q14_old = c("I did not drink sports drinks during the past 7 days",
"1 to 3 times during the past 7 days",
"4 to 6 times during the past 7 days",
"1 time per day",
"2 times per day",
"3 times per day",
"4 or more times per day"
),
Q15_old = c("I did not drink water during the past 7 days",
"1 to 3 times during the past 7 days",
"4 to 6 times during the past 7 days",
"1 time per day",
"2 times per day",
"3 times per day",
"4 or more times per day"
),
Q16_old = c("I did not drink milk during the past 7 days",
"1 to 3 glasses during the past 7 days",
"4 to 6 glasses during the past 7 days",
"1 glass per day",
"2 glasses per day",
"3 glasses per day",
"4 or more glasses per day"
),
Q17_old = c("0 days",
"1 day",
"2 days",
"3 days",
"4 days",
"5 days",
"6 days",
"7 days"
),
Q18_old = c("Yes",
"No",
"Not sure"
),
Q19_old = c("0 days",
"1 day",
"2 days",
"3 days",
"4 days",
"5 days",
"6 days",
"7 days"
),
Q20_old = c("0 days",
"1 day",
"2 days",
"3 days",
"4 days",
"5 days",
"6 days",
"7 days"
),
Q21_old = c("I do not watch TV on an average school day",
"Less than 1 hour per day",
"1 hour per day",
"2 hours per day",
"3 hours per day",
"4 hours per day",
"5 or more hours per day"
),
Q22_old = c("I do not play video or computer games or use a computer for something that is not school work",
"Less than 1 hour per day",
"1 hour per day",
"2 hours per day",
"3 hours per day",
"4 hours per day",
"5 or more hours per day"
),
Q23_old = c("0 days",
"1 day",
"2 days",
"3 days",
"4 days",
"5 days"
),
Q24_old = c("0 teams",
"1 team",
"2 teams",
"3 or more teams"
),
Q25_old = c("0 times",
"1 time",
"2 times",
"3 times",
"4 or more times"
)
)
# format Cohort and Phase indicator variables
format_cohortphase_factors <- function(dataset){
dataset %>% mutate(
cohort = factor(cohort, levels = survey_fct_levels[["cohort"]], labels = survey_fct_levels[["cohort"]], ordered = TRUE),
phase = factor(phase, levels = survey_fct_levels[["phase"]], labels = survey_fct_levels[["phase"]], ordered = TRUE)
)
}
# format sociodemographic factors of the YouHeaL survey
format_sociodem_factors <- function(dataset){
dataset %>% mutate(
sex = factor(sex, levels = survey_fct_levels[["sex"]], labels = survey_fct_levels[["sex"]], ordered = FALSE),
language1 = factor(language1, levels = survey_fct_levels[["language1"]], labels = survey_fct_levels[["language1"]], ordered = FALSE),
english_prof = factor(english_prof, levels = survey_fct_levels[["english_prof"]], labels = survey_fct_levels[["english_prof"]], ordered = TRUE)
)
}
# format old sociodemographic factors of the YouHeaL survey
format_sociodem_old_factors <- function(dataset){
dataset %>% mutate(
sex = factor(sex, levels = survey_fct_levels[["sex_old"]], labels = survey_fct_levels[["sex"]], ordered = FALSE),
language1 = factor(language1, levels = survey_fct_levels[["language1"]], labels = survey_fct_levels[["language1"]], ordered = FALSE),
english_prof = factor(english_prof, levels = survey_fct_levels[["english_prof_old"]], labels = survey_fct_levels[["english_prof"]], ordered = TRUE)
)
}
# reformat the old, manually entered (Cohort 1, Phase 1 & Phase 2.1) factor levels of the YRBS survey so they are ordered factors that match the Google Form options
format_YRBS_old_factors <- function(dataset){
dataset %>% mutate(
Q7_YRBS_juice = factor(Q7_YRBS_juice, levels = survey_fct_levels[["Q7_old"]], labels = survey_fct_levels[["Q7"]], ordered = TRUE),
Q8_YRBS_fruit = factor(Q8_YRBS_fruit, levels = survey_fct_levels[["Q8_old"]], labels = survey_fct_levels[["Q8"]], ordered = TRUE),
Q9_YRBS_salad = factor(Q9_YRBS_salad, levels = survey_fct_levels[["Q9_old"]], labels = survey_fct_levels[["Q9"]], ordered = TRUE),
Q10_YRBS_potato = factor(Q10_YRBS_potato, levels = survey_fct_levels[["Q10_old"]], labels = survey_fct_levels[["Q10"]], ordered = TRUE),
Q11_YRBS_carrot = factor(Q11_YRBS_carrot, levels = survey_fct_levels[["Q11_old"]], labels = survey_fct_levels[["Q11"]], ordered = TRUE),
Q12_YRBS_otherveg = factor(Q12_YRBS_otherveg, levels = survey_fct_levels[["Q12_old"]], labels = survey_fct_levels[["Q12"]], ordered = TRUE),
Q13_YRBS_soda = factor(Q13_YRBS_soda, levels = survey_fct_levels[["Q13_old"]], labels = survey_fct_levels[["Q13"]], ordered = TRUE),
Q14_YRBS_sportdrink = factor(Q14_YRBS_sportdrink, levels = survey_fct_levels[["Q14_old"]], labels = survey_fct_levels[["Q14"]], ordered = TRUE),
Q15_YRBS_water = factor(Q15_YRBS_water, levels = survey_fct_levels[["Q15_old"]], labels = survey_fct_levels[["Q15"]], ordered = TRUE),
Q16_YRBS_milk = factor(Q16_YRBS_milk, levels = survey_fct_levels[["Q16_old"]], labels = survey_fct_levels[["Q16"]], ordered = TRUE),
Q17_YRBS_breakfast = factor(Q17_YRBS_breakfast, levels = survey_fct_levels[["Q17_old"]], labels = survey_fct_levels[["Q17"]], ordered = TRUE),
Q18_YRBS_allergy = factor(Q18_YRBS_allergy, levels = survey_fct_levels[["Q18_old"]], labels = survey_fct_levels[["Q18"]], ordered = TRUE),
Q19_YRBS_physical = factor(Q19_YRBS_physical, levels = survey_fct_levels[["Q19_old"]], labels = survey_fct_levels[["Q19"]], ordered = TRUE),
Q20_YRBS_strength = factor(Q20_YRBS_strength, levels = survey_fct_levels[["Q20_old"]], labels = survey_fct_levels[["Q20"]], ordered = TRUE),
Q21_YRBS_tv = factor(Q21_YRBS_tv, levels = survey_fct_levels[["Q21_old"]], labels = survey_fct_levels[["Q21"]], ordered = TRUE),
Q22_YRBS_screentime = factor(Q22_YRBS_screentime, levels = survey_fct_levels[["Q22_old"]], labels = survey_fct_levels[["Q22"]], ordered = TRUE),
Q23_YRBS_pe = factor(Q23_YRBS_pe, levels = survey_fct_levels[["Q23_old"]], labels = survey_fct_levels[["Q23"]], ordered = TRUE),
Q24_YRBS_sportsteam = factor(Q24_YRBS_sportsteam, levels = survey_fct_levels[["Q24_old"]], labels = survey_fct_levels[["Q24"]], ordered = TRUE),
Q25_YRBS_concussion = factor(Q25_YRBS_concussion, levels = survey_fct_levels[["Q25_old"]], labels = survey_fct_levels[["Q25"]], ordered = TRUE)
)
}
# format the factor levels of the YRBS survey from the Google Form so they are ordered factors
format_YRBS_factors <- function(dataset){
dataset %>% mutate(
Q7_YRBS_juice = factor(Q7_YRBS_juice, levels = survey_fct_levels[["Q7"]], labels = survey_fct_levels[["Q7"]], ordered = TRUE),
Q8_YRBS_fruit = factor(Q8_YRBS_fruit, levels = survey_fct_levels[["Q8"]], labels = survey_fct_levels[["Q8"]], ordered = TRUE),
Q9_YRBS_salad = factor(Q9_YRBS_salad, levels = survey_fct_levels[["Q9"]], labels = survey_fct_levels[["Q9"]], ordered = TRUE),
Q10_YRBS_potato = factor(Q10_YRBS_potato, levels = survey_fct_levels[["Q10"]], labels = survey_fct_levels[["Q10"]], ordered = TRUE),
Q11_YRBS_carrot = factor(Q11_YRBS_carrot, levels = survey_fct_levels[["Q11"]], labels = survey_fct_levels[["Q11"]], ordered = TRUE),
Q12_YRBS_otherveg = factor(Q12_YRBS_otherveg, levels = survey_fct_levels[["Q12"]], labels = survey_fct_levels[["Q12"]], ordered = TRUE),
Q13_YRBS_soda = factor(Q13_YRBS_soda, levels = survey_fct_levels[["Q13"]], labels = survey_fct_levels[["Q13"]], ordered = TRUE),
Q14_YRBS_sportdrink = factor(Q14_YRBS_sportdrink, levels = survey_fct_levels[["Q14"]], labels = survey_fct_levels[["Q14"]], ordered = TRUE),
Q15_YRBS_water = factor(Q15_YRBS_water, levels = survey_fct_levels[["Q15"]], labels = survey_fct_levels[["Q15"]], ordered = TRUE),
Q16_YRBS_milk = factor(Q16_YRBS_milk, levels = survey_fct_levels[["Q16"]], labels = survey_fct_levels[["Q16"]], ordered = TRUE),
Q17_YRBS_breakfast = factor(Q17_YRBS_breakfast, levels = survey_fct_levels[["Q17"]], labels = survey_fct_levels[["Q17"]], ordered = TRUE),
Q18_YRBS_allergy = factor(Q18_YRBS_allergy, levels = survey_fct_levels[["Q18"]], labels = survey_fct_levels[["Q18"]], ordered = TRUE),
Q19_YRBS_physical = factor(Q19_YRBS_physical, levels = survey_fct_levels[["Q19"]], labels = survey_fct_levels[["Q19"]], ordered = TRUE),
Q20_YRBS_strength = factor(Q20_YRBS_strength, levels = survey_fct_levels[["Q20"]], labels = survey_fct_levels[["Q20"]], ordered = TRUE),
Q21_YRBS_tv = factor(Q21_YRBS_tv, levels = survey_fct_levels[["Q21"]], labels = survey_fct_levels[["Q21"]], ordered = TRUE),
Q22_YRBS_screentime = factor(Q22_YRBS_screentime, levels = survey_fct_levels[["Q22"]], labels = survey_fct_levels[["Q22"]], ordered = TRUE),
Q23_YRBS_pe = factor(Q23_YRBS_pe, levels = survey_fct_levels[["Q23"]], labels = survey_fct_levels[["Q23"]], ordered = TRUE),
Q24_YRBS_sportsteam = factor(Q24_YRBS_sportsteam, levels = survey_fct_levels[["Q24"]], labels = survey_fct_levels[["Q24"]], ordered = TRUE),
Q25_YRBS_concussion = factor(Q25_YRBS_concussion, levels = survey_fct_levels[["Q25"]], labels = survey_fct_levels[["Q25"]], ordered = TRUE)
)
}
# format the factor levels of the efficacy survey from the Google Form so they are ordered factors
format_efficacy_factors <- function(dataset){
dataset %>% mutate(
# format efficacy survey factors
Q26_efficacy = factor(Q26_efficacy, levels = survey_fct_levels[["efficacy"]], labels = survey_fct_levels[["efficacy"]], ordered = TRUE),
Q27_efficacy = factor(Q27_efficacy, levels = survey_fct_levels[["efficacy"]], labels = survey_fct_levels[["efficacy"]], ordered = TRUE),
Q28_efficacy = factor(Q28_efficacy, levels = survey_fct_levels[["efficacy"]], labels = survey_fct_levels[["efficacy"]], ordered = TRUE),
Q29_efficacy = factor(Q29_efficacy, levels = survey_fct_levels[["efficacy"]], labels = survey_fct_levels[["efficacy"]], ordered = TRUE),
Q30_efficacy = factor(Q30_efficacy, levels = survey_fct_levels[["efficacy"]], labels = survey_fct_levels[["efficacy"]], ordered = TRUE),
Q31_efficacy = factor(Q31_efficacy, levels = survey_fct_levels[["efficacy"]], labels = survey_fct_levels[["efficacy"]], ordered = TRUE),
Q32_efficacy = factor(Q32_efficacy, levels = survey_fct_levels[["efficacy"]], labels = survey_fct_levels[["efficacy"]], ordered = TRUE),
Q33_efficacy = factor(Q33_efficacy, levels = survey_fct_levels[["efficacy"]], labels = survey_fct_levels[["efficacy"]], ordered = TRUE),
Q34_efficacy = factor(Q34_efficacy, levels = survey_fct_levels[["efficacy"]], labels = survey_fct_levels[["efficacy"]], ordered = TRUE),
Q35_efficacy = factor(Q35_efficacy, levels = survey_fct_levels[["efficacy"]], labels = survey_fct_levels[["efficacy"]], ordered = TRUE)
)
}
# format the factor levels of the self-empowerment survey from the Google Form so they are ordered factors
format_empower_factors <- function(dataset){
dataset %>% mutate(
# format empowerment survey factors
Q36_empower = factor(Q36_empower, levels = survey_fct_levels[["empower"]], labels = survey_fct_levels[["empower"]], ordered = TRUE),
Q37_empower = factor(Q37_empower, levels = survey_fct_levels[["empower"]], labels = survey_fct_levels[["empower"]], ordered = TRUE),
Q38_empower = factor(Q38_empower, levels = survey_fct_levels[["empower"]], labels = survey_fct_levels[["empower"]], ordered = TRUE),
Q39_empower = factor(Q39_empower, levels = survey_fct_levels[["empower"]], labels = survey_fct_levels[["empower"]], ordered = TRUE),
Q40_empower = factor(Q40_empower, levels = survey_fct_levels[["empower"]], labels = survey_fct_levels[["empower"]], ordered = TRUE),
Q41_empower = factor(Q41_empower, levels = survey_fct_levels[["empower"]], labels = survey_fct_levels[["empower"]], ordered = TRUE),
Q42_empower = factor(Q42_empower, levels = survey_fct_levels[["empower"]], labels = survey_fct_levels[["empower"]], ordered = TRUE),
Q43_empower = factor(Q43_empower, levels = survey_fct_levels[["empower"]], labels = survey_fct_levels[["empower"]], ordered = TRUE),
Q44_empower = factor(Q44_empower, levels = survey_fct_levels[["empower"]], labels = survey_fct_levels[["empower"]], ordered = TRUE),
Q45_empower = factor(Q45_empower, levels = survey_fct_levels[["empower"]], labels = survey_fct_levels[["empower"]], ordered = TRUE),
Q46_empower = factor(Q46_empower, levels = survey_fct_levels[["empower"]], labels = survey_fct_levels[["empower"]], ordered = TRUE),
Q47_empower = factor(Q47_empower, levels = survey_fct_levels[["empower"]], labels = survey_fct_levels[["empower"]], ordered = TRUE)
)
}
# this function calls all the functions for the Google Form responses, in a row (i.e. it uses the "format_YRBS_factors" function instead of the "format_YRBS_old_factors" function)
format_GoogleForms <- function(dataset){
dataset %>%
format_cohortphase_factors() %>%
format_sociodem_factors() %>%
format_YRBS_factors() %>%
format_efficacy_factors() %>%
format_empower_factors()
}
yh_cohort1_p1_p2.1_labeled <-
# bind rows of phase 1 and phase 2.1 datasets
#   The phases were entered manually, and both need to be formatted to the updated google form
yh_cohort1_phase1 %>% rbind(yh_cohort1_phase2.1) %>%
# format factors in dataset so they match the Google Form responses
format_cohortphase_factors() %>%
format_sociodem_old_factors() %>%
format_YRBS_old_factors() %>%
format_efficacy_factors() %>%
format_empower_factors()
# format the YouHeaL surveys so factors match
# Cohort 1, Phase 2.2
yh_cohort1_phase2.2_labeled <- yh_cohort1_phase2.2 %>%
format_cohortphase_factors() %>%
# had to use manually entered sociodem formatting because copied variables from Phase 1
format_sociodem_old_factors() %>%
format_YRBS_factors() %>%
format_efficacy_factors() %>%
format_empower_factors()
# Cohort 2, Phase 1
yh_cohort2_phase1_labeled <- yh_cohort2_phase1 %>% format_GoogleForms()
analytic_cohort_raw <- yh_cohort1_p1_p2.1_labeled %>%
bind_rows(yh_cohort1_phase2.2_labeled) %>%
bind_rows(yh_cohort2_phase1_labeled)
analytic_cohort <- analytic_cohort_raw %>%
mutate(
# Indicator variable for Los Angeles residence (necessary because some entered "LA" and some entered "Los Angeles")
city_LA = ifelse(
str_detect(string = city, pattern = "LA") | str_detect(string = city, pattern = "Los Angeles"),
yes = 1,
no = 0
),
city_LA = factor(city_LA, levels = c(0, 1), labels = c("Other", "Los Angeles")),
# Indicator variable for race: Hispanic/Latino
race_HL = ifelse(
str_detect(string = race, pattern = "Hispanic") | str_detect(string = race, pattern = "Latino") | str_detect(string = race, pattern = "Mexican"),
yes = 1,
no = 0
),
race_HL = factor(race_HL, levels = c(0, 1), labels = c("Not Hispanic/Latino", "Hispanic/Latino")),
# Indicator variable for race: African American or Black
race_AAB = ifelse(
str_detect(string = race, pattern = "African American") | str_detect(string = race, pattern = "Black"),
yes = 1,
no = 0
),
race_AAB = factor(race_AAB, levels = c(0, 1), labels = c("Not African American or Black", "African American or Black")),
# Indicator variable for race: Asian
race_asian = ifelse(
str_detect(string = race, pattern = "Asian"),
yes = 1,
no = 0
),
race_asian = factor(race_asian, levels = c(0, 1), labels = c("Not Asian", "Asian")),
# Indicator variable for race: White only
race_wo = ifelse(
str_detect(string = race, pattern = "white") & race_HL == 0 & race_AAB == 0 & race_asian == 0,
yes = 1,
no = 0
),
race_wo = factor(race_wo, levels = c(0, 1), labels = c("Not White Only", "White Only"))
)
analytic_cohort$YRBS_diet_total <- analytic_cohort %>% select(
Q7_YRBS_juice, Q8_YRBS_fruit, Q9_YRBS_salad, Q10_YRBS_potato, Q11_YRBS_carrot, Q12_YRBS_otherveg, Q13_YRBS_soda, Q14_YRBS_sportdrink, Q15_YRBS_water, Q16_YRBS_milk, Q17_YRBS_breakfast
) %>%
# Convert factor levels to integer values
mutate(
## Healthy items
Q8_YRBS_fruit = Q8_YRBS_fruit %>% as.integer,
Q9_YRBS_salad = Q9_YRBS_salad %>% as.integer,
Q10_YRBS_potato = Q10_YRBS_potato %>% as.integer,
Q11_YRBS_carrot = Q11_YRBS_carrot %>% as.integer,
Q12_YRBS_otherveg = Q12_YRBS_otherveg %>% as.integer,
Q15_YRBS_water = Q15_YRBS_water %>% as.integer,
Q16_YRBS_milk = Q16_YRBS_milk %>% as.integer,
Q17_YRBS_breakfast = Q17_YRBS_breakfast %>% as.integer,
## Unhealthy items, factor orders are reversed
Q7_YRBS_juice = Q7_YRBS_juice %>% fct_rev %>% as.integer,
Q13_YRBS_soda = Q13_YRBS_soda %>% fct_rev %>% as.integer,
Q14_YRBS_sportdrink = Q14_YRBS_sportdrink %>% fct_rev %>% as.integer
) %>%
# sum the rows to get the overall YRBS diet composite
apply(MARGIN = 1, FUN = sum)
print("Summary stats for YRBS Diet score")
analytic_cohort$YRBS_diet_total %>% summary
analytic_cohort$YRBS_physical_total <- analytic_cohort %>%
select(Q19_YRBS_physical, Q20_YRBS_strength, Q21_YRBS_tv, Q22_YRBS_screentime) %>%
# Convert factor levels to integer values
mutate(
## Healthy items
Q19_YRBS_physical = Q19_YRBS_physical %>% as.integer,
Q20_YRBS_strength = Q20_YRBS_strength %>% as.integer,
## Unhealthy items, factor orders are reversed
Q21_YRBS_tv = Q21_YRBS_tv %>% fct_rev %>% as.integer,
Q22_YRBS_screentime = Q22_YRBS_screentime %>% fct_rev %>% as.integer
) %>%
# sum the rows to get the overall YRBS diet composite
apply(MARGIN = 1, FUN = sum)
print("Summary stats for YRBS Physical Activity score")
analytic_cohort$YRBS_physical_total %>% summary
# look at items from GSE survey
# analytic_cohort %>% select(ends_with("efficacy")) %>% glimpse
# function that replaces factor responses with integer weight values
scoreGSE <- function(x){
ifelse(
x == "Not at all true", yes = 1, no = ifelse(
x == "Hardly true", yes = 2, no = ifelse(
x == "Moderately true", yes = 3, no = ifelse(
x == "Exactly true", yes = 4, no = NA
)
)
)
)
}
# make a variable of the total efficacy score (from 10 to 40)
analytic_cohort$total_efficacy <- analytic_cohort %>%
select(ends_with("efficacy")) %>%
# add points to each response for GSE items
apply(MARGIN = 2, FUN = scoreGSE) %>%
# sum the points for each individual during each Phase to get a total score
apply(MARGIN = 1, FUN = sum)
print("Summary stats for Total Self-Efficacy score")
analytic_cohort$total_efficacy %>% summary
# look at items from Emp survey
# analytic_cohort %>% select(ends_with("empower")) %>% glimpse
# function that replaces factor responses with integer weight values
weightEmp <- function(x){
ifelse(
x == "Disagree strongly", yes = 1, no = ifelse(
x == "Disagree somewhat", yes = 2, no = ifelse(
x == "Agree somewhat", yes = 3, no = ifelse(
x == "Agree strongly", yes = 4, no = NA
)
)
)
)
}
# function that produces each empowerment score depending on which items are included
scoreEmp <- function(item_string){
analytic_cohort %>%
select(item_string) %>%
# add points to each response for EmpCmp items
apply(MARGIN = 2, FUN = weightEmp) %>%
# sum the points for each individual during each Phase to get a total score
apply(MARGIN = 1, FUN = sum)
}
# creates Composite Empowerment variable (range from 12 to 48, all empowerment items - Q36 to Q47)
analytic_cohort$empower_composite <- scoreEmp(c("Q36_empower", "Q37_empower", "Q38_empower", "Q39_empower", "Q40_empower", "Q41_empower", "Q42_empower", "Q43_empower", "Q44_empower", "Q45_empower", "Q46_empower", "Q47_empower"))
print("Summary stats for Composite Empowerment score")
analytic_cohort$empower_composite %>% summary
# creates Individual Empowerment variable (range from 2 to 8, empowerment items - Q41 and Q43)
analytic_cohort$empower_individual <- scoreEmp(c("Q41_empower", "Q43_empower"))
print("Summary stats for Individual Empowerment score")
analytic_cohort$empower_individual %>% summary
# creates Community Empowerment variable (range from 5 to 20, empowerment items - Q42 and Q44 to Q47)
analytic_cohort$empower_community <- scoreEmp(c("Q42_empower", "Q44_empower", "Q45_empower", "Q46_empower", "Q47_empower"))
print("Summary stats for Community Empowerment score")
analytic_cohort$empower_community %>% summary
# creates Organizational Empowerment variable (range from 5 to 20, empowerment items - Q36 to Q40)
analytic_cohort$empower_organization <- scoreEmp(c("Q36_empower", "Q37_empower", "Q38_empower", "Q39_empower", "Q40_empower"))
print("Summary stats for Organizational Empowerment score")
analytic_cohort$empower_organization %>% summary
# fill in the 85th percentile cutoffs from the CDC pdf, link above
obesity_cutoff <- c("Male", 13, 21.8, 90.8) %>%
rbind(c("Male", 14, 20.5, 93.9)) %>%
rbind(c("Male", 15, 20.1, 94.8)) %>%
rbind(c("Male", 16, 18.3, 99.3)) %>%
rbind(c("Male", 17, 22.9, 101.6)) %>%
rbind(c("Male", 18, 20.4, 101.6)) %>%
rbind(c("Male", 19, 21.6, 93.9)) %>%
rbind(c("Female", 13, 25.9, 92.1)) %>%
rbind(c("Female", 14, 27.1, 91.2)) %>%
rbind(c("Female", 15, 27.5, 95.3)) %>%
rbind(c("Female", 16, 26.0, 92.2)) %>%
rbind(c("Female", 17, 27.2, 95.5)) %>%
rbind(c("Female", 18, 26.6, 99.6)) %>%
rbind(c("Female", 19, 30.5, 103.2)) %>%
as_tibble(rownames = NULL)
# name the columns
colnames(obesity_cutoff) <- c("Sex", "Age", "TSF", "WC")
# format each column
obesity_cutoff <- obesity_cutoff %>%
mutate(
Sex = factor(Sex, levels = survey_fct_levels$sex),
Age = as.double(Age),
TSF = as.double(TSF),
WC = as.double(WC)
)
# label anthropometric variables (units)
label(obesity_cutoff$TSF) <- "Tricep Skinfold (mm)"
label(obesity_cutoff$WC) <- "Waist Circumference (cm)"
# print to screen
obesity_cutoff %>% kable(digits = 3) %>%
kable_styling(
#bootstrap table classes
bootstrap_options = c("striped", "hover")
) %>%
pack_rows("Male", 1, 7) %>%
pack_rows("Female", 8, 14)
# take the average of each anthropometric variable: triceps skinfold (TSF), wiast circumference (WC), weight (WM), height (HM)
analytic_cohort$TSF_avg <- analytic_cohort %>% select(starts_with("TSF")) %>% apply(MARGIN = 1, FUN = mean, na.rm = TRUE)
analytic_cohort$WC_avg <- analytic_cohort %>% select(starts_with("WC")) %>% apply(MARGIN = 1, FUN = mean, na.rm = TRUE)
analytic_cohort$WM_avg <- analytic_cohort %>% select(starts_with("WM")) %>% apply(MARGIN = 1, FUN = mean, na.rm = TRUE)
analytic_cohort$HM_avg <- analytic_cohort %>% select(starts_with("HM")) %>% apply(MARGIN = 1, FUN = mean, na.rm = TRUE)
# obesity defined by triceps skinfold >= 85th percentile
analytic_cohort$obesity_TSF <- analytic_cohort %>%
select(sex, age, TSF_avg) %>%
apply(MARGIN = 2, FUN = function(sex = analytic_cohort$sex, age = analytic_cohort$age, TSF_avg = analytic_cohort$TSF_avg){
ifelse(
sex == "Male" & age == 13 & TSF_avg >= 21.8, yes = 1, no = ifelse(
sex == "Male" & age == 14 & TSF_avg >= 20.5, yes = 1, no = ifelse(
sex == "Male" & age == 15 & TSF_avg >= 20.1, yes = 1, no = ifelse(
sex == "Male" & age == 16 & TSF_avg >= 18.3, yes = 1, no = ifelse(
sex == "Male" & age == 17 & TSF_avg >= 22.9, yes = 1, no = ifelse(
sex == "Male" & age == 18 & TSF_avg >= 20.4, yes = 1, no = ifelse(
sex == "Male" & age == 19 & TSF_avg >= 21.6, yes = 1, no = ifelse(
sex == "Female" & age == 13 & TSF_avg >= 25.9, yes = 1, no = ifelse(
sex == "Female" & age == 14 & TSF_avg >= 27.1, yes = 1, no = ifelse(
sex == "Female" & age == 15 & TSF_avg >= 27.5, yes = 1, no = ifelse(
sex == "Female" & age == 16 & TSF_avg >= 26.0, yes = 1, no = ifelse(
sex == "Female" & age == 17 & TSF_avg >= 27.2, yes = 1, no = ifelse(
sex == "Female" & age == 18 & TSF_avg >= 26.6, yes = 1, no = ifelse(
sex == "Female" & age == 19 & TSF_avg >= 30.5, yes = 1, no = 0
)))))))))))))
)
}
)
# obesity defined by waist circumference >= 85th percentile
analytic_cohort$obesity_WC <- analytic_cohort %>%
select(sex, age, WC_avg) %>%
apply(MARGIN = 2, FUN = function(sex = analytic_cohort$sex, age = analytic_cohort$age, WC_avg = analytic_cohort$WC_avg){
ifelse(
sex == "Male" & age == 13 & WC_avg >= 90.8, yes = 1, no = ifelse(
sex == "Male" & age == 14 & WC_avg >= 93.9, yes = 1, no = ifelse(
sex == "Male" & age == 15 & WC_avg >= 94.8, yes = 1, no = ifelse(
sex == "Male" & age == 16 & WC_avg >= 99.3, yes = 1, no = ifelse(
sex == "Male" & age == 17 & WC_avg >= 101.6, yes = 1, no = ifelse(
sex == "Male" & age == 18 & WC_avg >= 101.6, yes = 1, no = ifelse(
sex == "Male" & age == 19 & WC_avg >= 93.9, yes = 1, no = ifelse(
sex == "Female" & age == 13 & WC_avg >= 92.1, yes = 1, no = ifelse(
sex == "Female" & age == 14 & WC_avg >= 91.2, yes = 1, no = ifelse(
sex == "Female" & age == 15 & WC_avg >= 95.3, yes = 1, no = ifelse(
sex == "Female" & age == 16 & WC_avg >= 92.2, yes = 1, no = ifelse(
sex == "Female" & age == 17 & WC_avg >= 95.5, yes = 1, no = ifelse(
sex == "Female" & age == 18 & WC_avg >= 99.6, yes = 1, no = ifelse(
sex == "Female" & age == 19 & WC_avg >= 103.2, yes = 1, no = 0
)))))))))))))
)
}
)
label(analytic_cohort$YRBS_diet_total) <- "YRBS Diet Composite"
label(analytic_cohort$YRBS_physical_total) <- "YRBS Physical Activity Composite"
label(analytic_cohort$total_efficacy) <- "General Self-Efficacy"
label(analytic_cohort$empower_composite) <- "Composite Empowerment"
label(analytic_cohort$empower_individual) <- "Individual Empowerment"
label(analytic_cohort$empower_community) <- "Community Empowerment"
label(analytic_cohort$empower_organization) <- "Organizational Empowerment"
label(analytic_cohort$TSF_avg) <- "Triceps Skinfold (mm)"
label(analytic_cohort$WC_avg) <- "Waist Circumference (cm)"
#set save location
# setwd("/Volumes/GoogleDrive/My Drive/20180823 YouHeal/Data/!Clean Datasets")
# Save phase 1 data file
#save(YH_phase1, file = "Phase1_Raw.RData")
spaghetPlot <- function(variable){
analytic_cohort %>% filter(cohort == "Cohort 1") %>%
ggplot(aes_string(x = "phase", y = variable, group = "ID")) +
geom_line() +
stat_summary(aes(group = 1), geom = "line", fun.y = mean, size = 1.5, color = "red") +
ylab(label = label(analytic_cohort[[variable]])) +
xlab(label = "Phases (6 Months Apart)")
}
spaghetSex <- function(variable){
spaghetPlot(variable) +
facet_grid(. ~ sex)
}
spaghetPlot("YRBS_diet_total")
spaghetSex("YRBS_diet_total")
spaghetPlot("YRBS_physical_total")
spaghetSex("YRBS_physical_total")
spaghetPlot("total_efficacy")
spaghetSex("total_efficacy")
spaghetPlot("empower_composite")
spaghetSex("empower_composite")
spaghetPlot("empower_individual")
spaghetSex("empower_individual")
spaghetPlot("empower_community")
spaghetSex("empower_community")
spaghetPlot("empower_organization")
spaghetSex("empower_organization")
spaghetPlot("TSF_avg")
spaghetSex("TSF_avg")
spaghetPlot("WC_avg")
spaghetSex("WC_avg")
unlink('YouHeaL Analysis_cache', recursive = TRUE)
