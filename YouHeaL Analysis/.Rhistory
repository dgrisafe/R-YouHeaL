test_diff("Q21_YRBS_tv"),
test_diff("Q22_YRBS_screentime")
# test_diff("Q18_YRBS_allergy"),
# test_diff("Q23_YRBS_pe"),
# test_diff("Q24_YRBS_sportsteam"),
# test_diff("Q25_YRBS_concussion")
)) %>%
# call function that formats test results
test_diff_format()
# physical activity
test_results_physical %>%
# filter for just the statistically significant comparisons, before adjusting for multiple comparisons
# filter(p_val < 0.05) %>%
filter(item %in% c("Q19_YRBS_physical", "Q20_YRBS_strength")) %>%
mutate(item = case_when(
str_detect(item, "physical") ~ "Physically Active\n≥ 1 Hour",
str_detect(item, "strength") ~ "Strength Training"
)) %>%
ggplot(aes(x = fct_reorder(item, estimate), y = estimate)) +
geom_bar(stat = "identity", fill = col_usc_red) +
coord_flip() +
scale_y_continuous(limits = c(0, 0.75), breaks = seq(0, 0.75, 0.25)) +
labs(caption = "* p-value < 0.05") +
theme(
plot.title = element_text(size = 16),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.x = element_text(size = 10),
plot.caption = element_text(size = 10)
) +
xlab("") +
ylab("\nDifference From Baseline to Follow-Up") +
ggtitle("In the Past Week, How Many Days Were You...")
# screen time
test_results_physical %>%
# filter for just the statistically significant comparisons, before adjusting for multiple comparisons
# filter(p_val < 0.05) %>%
filter(item %in% c("Q21_YRBS_tv", "Q22_YRBS_screentime")) %>%
mutate(item = case_when(
str_detect(item, "tv") ~ "Watch TV",
str_detect(item, "screentime") ~ "Play Video Games\nor Use Social Media"
)) %>%
ggplot(aes(x = fct_reorder(item, estimate), y = estimate)) +
geom_bar(stat = "identity", fill = col_usc_yel, width = 0.5) +
coord_flip() +
scale_x_discrete(position = "top") +
scale_y_continuous(limits = c(-0.5, 0), breaks = seq(-0.5, 0, 0.25)) +
labs(caption = "* p-value < 0.05") +
theme(
plot.title = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.x = element_text(size = 10),
plot.caption = element_text(size = 10)
) +
xlab("") +
ylab("\nDifference From Baseline to Follow-Up") +
ggtitle("On an Average School Day, How Many Hours Did You...")
# make pretty html table
test_results_physical %>%
kable(digits = 2) %>%
#bootstrap table classes
kable_styling(bootstrap_options = c("striped", "hover"))
# data frame of test results
test_results_physical <- as.data.frame(rbind(
test_diff("Q19_YRBS_physical"),
test_diff("Q20_YRBS_strength"),
test_diff("Q21_YRBS_tv"),
test_diff("Q22_YRBS_screentime")
# test_diff("Q18_YRBS_allergy"),
# test_diff("Q23_YRBS_pe"),
# test_diff("Q24_YRBS_sportsteam"),
# test_diff("Q25_YRBS_concussion")
)) %>%
# call function that formats test results
test_diff_format()
# physical activity
test_results_physical %>%
# filter for just the statistically significant comparisons, before adjusting for multiple comparisons
# filter(p_val < 0.05) %>%
filter(item %in% c("Q19_YRBS_physical", "Q20_YRBS_strength")) %>%
mutate(item = case_when(
str_detect(item, "physical") ~ "Physically Active\n≥ 1 Hour",
str_detect(item, "strength") ~ "Strength Training"
)) %>%
ggplot(aes(x = fct_reorder(item, estimate), y = estimate)) +
geom_bar(stat = "identity", fill = col_usc_red, width = 0.5) +
coord_flip() +
scale_y_continuous(limits = c(0, 0.75), breaks = seq(0, 0.75, 0.25)) +
labs(caption = "* p-value < 0.05") +
theme(
plot.title = element_text(size = 16),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.x = element_text(size = 10),
plot.caption = element_text(size = 10)
) +
xlab("") +
ylab("\nDifference From Baseline to Follow-Up") +
ggtitle("In the Past Week, How Many Days Were You...")
# screen time
test_results_physical %>%
# filter for just the statistically significant comparisons, before adjusting for multiple comparisons
# filter(p_val < 0.05) %>%
filter(item %in% c("Q21_YRBS_tv", "Q22_YRBS_screentime")) %>%
mutate(item = case_when(
str_detect(item, "tv") ~ "Watch TV",
str_detect(item, "screentime") ~ "Play Video Games\nor Use Social Media"
)) %>%
ggplot(aes(x = fct_reorder(item, estimate), y = estimate)) +
geom_bar(stat = "identity", fill = col_usc_yel, width = 0.5) +
coord_flip() +
scale_x_discrete(position = "top") +
scale_y_continuous(limits = c(-0.5, 0), breaks = seq(-0.5, 0, 0.25)) +
labs(caption = "* p-value < 0.05") +
theme(
plot.title = element_text(size = 14),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.x = element_text(size = 10),
plot.caption = element_text(size = 10)
) +
xlab("") +
ylab("\nDifference From Baseline to Follow-Up") +
ggtitle("On an Average School Day, How Many Hours Did You...")
# make pretty html table
test_results_physical %>%
kable(digits = 2) %>%
#bootstrap table classes
kable_styling(bootstrap_options = c("striped", "hover"))
# McNemar's Chi-squared test with continuity correction: non-parametric, paired Chi-squared test
#   https://stats.idre.ucla.edu/other/mult-pkg/whatstat/
test_diff_cat <- function(item){
dataframe <- analytic_cohort_compcase_interval
# format variable of interest so it removes missing
dataframe$var <- dataframe[[item]] %>% as.double()
dataframe <- dataframe %>%
# format independent, phase variable for statistical test
mutate(groupings = factor(phase, c("Mentor Training", "Health Training"), ordered = TRUE)) %>%
# group by ID
group_by(ID) %>%
# remove observation if one of the observations is missing at baseline or follow-up
filter(!is.na(sum(var))) %>%
ungroup()
# make an index of the number of observations
n_people <- dataframe %>% nrow() / 2
test <- mcnemar.test(x = dataframe[["groupings"]], y = dataframe$var)
var_time0 <- dataframe %>% filter(groupings == "Health Training") %>% summarise(mean(var))
var_time1 <- dataframe %>% filter(groupings == "Mentor Training") %>% summarise(mean(var))
test$estimate <- as.double(var_time1) - as.double(var_time0)
c(item, test$estimate, test$p.value, test$method, n_people)
}
# function that formats the test results data frame
test_diff_format_cat <- function(dataframe){
dataframe %>%
# name the columns
rename(item = V1, estimate = V2, p_val = V3, test = V4, n = V5) %>%
# add a column with p-values adjusted for multiple comparisons
cbind(p_val_adj = as.double(as.character(.$p_val)) %>% p.adjust(method = "bonferroni")) %>%
# reorder column
select(item, estimate, p_val, p_val_adj, test, n) %>%
# format as numeric variables
mutate(
estimate = estimate %>% as.character() %>% as.double(),
p_val = p_val %>% as.character() %>% as.double(),
p_val_adj = p_val_adj %>% as.character() %>% as.double()
)
}
# data frame of test results
test_results_anthro <- as.data.frame(rbind(
test_diff_cat("obesity_TSF"),
test_diff_cat("obesity_WC")
)) %>%
# call function that formats test results
test_diff_format_cat()
# physical activity
test_results_anthro %>%
# filter for just the statistically significant comparisons, before adjusting for multiple comparisons
# filter(p_val < 0.05) %>%
mutate(item = case_when(
str_detect(item, "TSF") ~ "≥ 85% Triceps\nSkin Fold",
str_detect(item, "WC") ~ "≥ 85% Waist\nCircumference*"
)) %>%
ggplot(aes(x = fct_reorder(item, estimate), y = estimate)) +
geom_bar(stat = "identity", fill = col_usc_red) +
coord_flip() +
scale_y_continuous(limits = c(-0.05, 0.2), breaks = seq(-0.05, 0.2, 0.05), labels = scales::percent_format(accuracy = 1)) +
labs(caption = "* p-value < 0.05") +
theme(
plot.title = element_text(size = 16),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.x = element_text(size = 10),
plot.caption = element_text(size = 10)
) +
xlab("") +
ylab("\nDifference From Baseline to Follow-Up") +
ggtitle("Proportion Overweight by Body Measurements")
# make pretty html table
test_results_anthro %>%
kable(digits = 2) %>%
#bootstrap table classes
kable_styling(bootstrap_options = c("striped", "hover"))
# data frame of test results
test_results_anthro <- as.data.frame(rbind(
test_diff_cat("obesity_TSF"),
test_diff_cat("obesity_WC")
)) %>%
# call function that formats test results
test_diff_format_cat()
# physical activity
test_results_anthro %>%
# filter for just the statistically significant comparisons, before adjusting for multiple comparisons
# filter(p_val < 0.05) %>%
mutate(item = case_when(
str_detect(item, "TSF") ~ "≥ 85% Triceps\nSkin Fold",
str_detect(item, "WC") ~ "≥ 85% Waist\nCircumference*"
)) %>%
ggplot(aes(x = fct_reorder(item, estimate), y = estimate)) +
geom_bar(stat = "identity", fill = col_usc_red, width = 0.5) +
coord_flip() +
scale_y_continuous(limits = c(-0.05, 0.2), breaks = seq(-0.05, 0.2, 0.05), labels = scales::percent_format(accuracy = 1)) +
labs(caption = "* p-value < 0.05") +
theme(
plot.title = element_text(size = 16),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.x = element_text(size = 10),
plot.caption = element_text(size = 10)
) +
xlab("") +
ylab("\nDifference From Baseline to Follow-Up") +
ggtitle("Proportion Overweight by Body Measurements")
# make pretty html table
test_results_anthro %>%
kable(digits = 2) %>%
#bootstrap table classes
kable_styling(bootstrap_options = c("striped", "hover"))
# analytic_cohort_completecase %>%
#   mutate(Q7_YRBS_juice = str_wrap(Q7_YRBS_juice, 28)) %>%
#     ggplot(aes(x = phase, y = fct_rev(Q7_YRBS_juice), group = ID, color = cohort)) +
#     geom_line(aes(alpha = 0.01)) +
#     # add theme colors (set in first chunk)
#     yh_cohort_colors() +
#     # remove legend
#     theme(
#       plot.title = element_text(hjust = 0.5),
#       legend.position = "none",
#       axis.text.x = element_text(size = 10),
#       axis.text.y = element_text(size = 10)
#       ) +
#     stat_summary(aes(group = 1), geom = "line", fun.y = mean, size = 1.5, color = "black", linetype = 2) +
#   ggtitle(label(analytic_cohort[["Q7_YRBS_juice"]])) +
#   ylab("") +
#   xlab(label = "\nPhase")
# index variable for number of words to wrap item responses
wrap_var <- 28
# function to plot individual items
plot_complete_items <- function(variable){
analytic_cohort_completecase %>%
drop_na_(variable) %>%
ggplot(aes(x = phase, y = !!variable, group = ID, color = cohort)) +
geom_line(aes(alpha = 0.01)) +
geom_boxplot(aes(x = phase, group = phase), width = 0.2, alpha = 1) +
# add theme colors (set in first chunk)
scale_y_discrete(labels = wrap_format(28), drop=FALSE) +
yh_cohort_colors() +
# remove legend
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none",
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10)
) +
stat_summary(aes(group = 1), geom = "line", fun.y = mean, size = 1.7, color = "black", linetype = 2) +
ylab("") +
xlab(label = "\nPhase")
}
# data frame of test results
test_results_empower <- as.data.frame(rbind(
test_diff("empower_composite"),
test_diff("empower_individual"),
test_diff("empower_community"),
test_diff("empower_organization")
)) %>%
# call function that formats test results
test_diff_format()
# make a plot showing the effect sizes of the differences
test_results_empower %>%
# filter for just the statistically significant comparisons, before adjusting for multiple comparisons
# filter(p_val < 0.05) %>%
mutate(item = case_when(
str_detect(item, "empower_composite") ~ "Overall*",
str_detect(item, "empower_individual") ~ "Individual",
str_detect(item, "empower_community") ~ "Community",
str_detect(item, "empower_organization") ~ "Organization"
)) %>%
ggplot(aes(x = fct_reorder(item, estimate), y = estimate)) +
geom_bar(stat = "identity", fill = col_usc_red, width = 0.3) +
coord_flip() +
# scale_y_continuous(limits = c(-0.11, 0.75), breaks = seq(0, 0.75, 0.25)) +
labs(caption = "* p-value < 0.05") +
theme(
plot.title = element_text(size = 16),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.text.x = element_text(size = 10),
plot.caption = element_text(size = 10)
) +
xlab("") +
ylab("\nDifference From Baseline to Follow-Up") +
ggtitle("Empowerment: Perceived Control at Different Levels")
# make pretty html table
test_results_empower %>%
kable(digits = 3) %>%
#bootstrap table classes
kable_styling(bootstrap_options = c("striped", "hover"))
# data frame of test results
test_results_empower <- as.data.frame(rbind(
test_diff("empower_composite"),
test_diff("empower_individual"),
test_diff("empower_community"),
test_diff("empower_organization")
)) %>%
# call function that formats test results
test_diff_format()
# make a plot showing the effect sizes of the differences
test_results_empower %>%
# filter for just the statistically significant comparisons, before adjusting for multiple comparisons
# filter(p_val < 0.05) %>%
mutate(item = case_when(
str_detect(item, "empower_composite") ~ "Overall*",
str_detect(item, "empower_individual") ~ "Individual",
str_detect(item, "empower_community") ~ "Community",
str_detect(item, "empower_organization") ~ "Organization"
)) %>%
ggplot(aes(x = fct_reorder(item, estimate), y = estimate)) +
geom_bar(stat = "identity", fill = col_usc_red, width = 0.5) +
coord_flip() +
# scale_y_continuous(limits = c(-0.11, 0.75), breaks = seq(0, 0.75, 0.25)) +
labs(caption = "* p-value < 0.05") +
theme(
plot.title = element_text(size = 16),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.text.x = element_text(size = 10),
plot.caption = element_text(size = 10)
) +
xlab("") +
ylab("\nDifference From Baseline to Follow-Up") +
ggtitle("Empowerment: Perceived Control at Different Levels")
# make pretty html table
test_results_empower %>%
kable(digits = 3) %>%
#bootstrap table classes
kable_styling(bootstrap_options = c("striped", "hover"))
# data frame of test results
test_results_empower <- as.data.frame(rbind(
test_diff("empower_composite"),
test_diff("empower_individual"),
test_diff("empower_community"),
test_diff("empower_organization")
)) %>%
# call function that formats test results
test_diff_format()
# make a plot showing the effect sizes of the differences
test_results_empower %>%
# filter for just the statistically significant comparisons, before adjusting for multiple comparisons
# filter(p_val < 0.05) %>%
mutate(item = case_when(
str_detect(item, "empower_composite") ~ "Overall*",
str_detect(item, "empower_individual") ~ "Individual",
str_detect(item, "empower_community") ~ "Community",
str_detect(item, "empower_organization") ~ "Organization"
)) %>%
ggplot(aes(x = fct_reorder(item, estimate), y = estimate)) +
geom_bar(stat = "identity", fill = col_usc_red, width = 0.6) +
coord_flip() +
# scale_y_continuous(limits = c(-0.11, 0.75), breaks = seq(0, 0.75, 0.25)) +
labs(caption = "* p-value < 0.05") +
theme(
plot.title = element_text(size = 16),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.text.x = element_text(size = 10),
plot.caption = element_text(size = 10)
) +
xlab("") +
ylab("\nDifference From Baseline to Follow-Up") +
ggtitle("Empowerment: Perceived Control at Different Levels")
# make pretty html table
test_results_empower %>%
kable(digits = 3) %>%
#bootstrap table classes
kable_styling(bootstrap_options = c("striped", "hover"))
# data frame of test results
test_results_empower <- as.data.frame(rbind(
test_diff("empower_composite"),
test_diff("empower_individual"),
test_diff("empower_community"),
test_diff("empower_organization")
)) %>%
# call function that formats test results
test_diff_format()
# make a plot showing the effect sizes of the differences
test_results_empower %>%
# filter for just the statistically significant comparisons, before adjusting for multiple comparisons
# filter(p_val < 0.05) %>%
mutate(item = case_when(
str_detect(item, "empower_composite") ~ "Overall*",
str_detect(item, "empower_individual") ~ "Individual",
str_detect(item, "empower_community") ~ "Community",
str_detect(item, "empower_organization") ~ "Organization"
)) %>%
ggplot(aes(x = fct_reorder(item, estimate), y = estimate)) +
geom_bar(stat = "identity", fill = col_usc_red, width = 2/3) +
coord_flip() +
# scale_y_continuous(limits = c(-0.11, 0.75), breaks = seq(0, 0.75, 0.25)) +
labs(caption = "* p-value < 0.05") +
theme(
plot.title = element_text(size = 16),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.text.x = element_text(size = 10),
plot.caption = element_text(size = 10)
) +
xlab("") +
ylab("\nDifference From Baseline to Follow-Up") +
ggtitle("Empowerment: Perceived Control at Different Levels")
# make pretty html table
test_results_empower %>%
kable(digits = 3) %>%
#bootstrap table classes
kable_styling(bootstrap_options = c("striped", "hover"))
# data frame of test results
test_results_empower <- as.data.frame(rbind(
test_diff("empower_composite"),
test_diff("empower_individual"),
test_diff("empower_community"),
test_diff("empower_organization")
)) %>%
# call function that formats test results
test_diff_format()
# make a plot showing the effect sizes of the differences
test_results_empower %>%
# filter for just the statistically significant comparisons, before adjusting for multiple comparisons
# filter(p_val < 0.05) %>%
mutate(item = case_when(
str_detect(item, "empower_composite") ~ "Overall*",
str_detect(item, "empower_individual") ~ "Individual",
str_detect(item, "empower_community") ~ "Community",
str_detect(item, "empower_organization") ~ "Organization"
)) %>%
ggplot(aes(x = fct_reorder(item, estimate), y = estimate)) +
geom_bar(stat = "identity", fill = col_usc_red, width = 0.7) +
coord_flip() +
# scale_y_continuous(limits = c(-0.11, 0.75), breaks = seq(0, 0.75, 0.25)) +
labs(caption = "* p-value < 0.05") +
theme(
plot.title = element_text(size = 16),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.text.x = element_text(size = 10),
plot.caption = element_text(size = 10)
) +
xlab("") +
ylab("\nDifference From Baseline to Follow-Up") +
ggtitle("Empowerment: Perceived Control at Different Levels")
# make pretty html table
test_results_empower %>%
kable(digits = 3) %>%
#bootstrap table classes
kable_styling(bootstrap_options = c("striped", "hover"))
# data frame of test results
test_results_empower <- as.data.frame(rbind(
test_diff("empower_composite"),
test_diff("empower_individual"),
test_diff("empower_community"),
test_diff("empower_organization")
)) %>%
# call function that formats test results
test_diff_format()
# make a plot showing the effect sizes of the differences
test_results_empower %>%
# filter for just the statistically significant comparisons, before adjusting for multiple comparisons
# filter(p_val < 0.05) %>%
mutate(item = case_when(
str_detect(item, "empower_composite") ~ "Overall*",
str_detect(item, "empower_individual") ~ "Individual",
str_detect(item, "empower_community") ~ "Community",
str_detect(item, "empower_organization") ~ "Organization"
)) %>%
ggplot(aes(x = fct_reorder(item, estimate), y = estimate)) +
geom_bar(stat = "identity", fill = col_usc_red, width = 0.75) +
coord_flip() +
# scale_y_continuous(limits = c(-0.11, 0.75), breaks = seq(0, 0.75, 0.25)) +
labs(caption = "* p-value < 0.05") +
theme(
plot.title = element_text(size = 16),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.text.x = element_text(size = 10),
plot.caption = element_text(size = 10)
) +
xlab("") +
ylab("\nDifference From Baseline to Follow-Up") +
ggtitle("Empowerment: Perceived Control at Different Levels")
# make pretty html table
test_results_empower %>%
kable(digits = 3) %>%
#bootstrap table classes
kable_styling(bootstrap_options = c("striped", "hover"))
